# template[tags(heroku,deploy)]

daemon off;
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
	gzip on;
  gzip_min_length 1000;
  gzip_types application/json text/css application/javascript application/x-javascript;
	gzip_comp_level 2;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
	error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# Must read the body in 5 seconds.
	client_body_timeout 5;

  upstream redwood_server {
      server 127.0.0.1:8911 fail_timeout=0;
  }

  server {
    root /app/web/dist;
    server_name _;
    listen <%= ENV["PORT"] %>;
    keepalive_timeout 5;
    index index.html;

    error_page 404 /404.html;
    error_page 500 /500.html;

    location / {
      try_files $uri /200.html =404;
    }

    location ^~ /static/ {
      gzip_static on;
      expires max;
      add_header Cache-Control public;
    }

    location ~ /.redwood/functions(.*) {
      rewrite ^/.redwood/functions(.*) $1 break;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://redwood_server;
    }
  }
}
